"""empty message

Revision ID: bc9998fc215d
Revises: 36e730ce0bd2
Create Date: 2024-12-25 17:34:02.401941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'bc9998fc215d'
down_revision: Union[str, None] = '36e730ce0bd2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('indicator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('indicator_value', sa.Integer(), nullable=False))
        batch_op.alter_column('date',
               existing_type=sa.DATETIME(),
               type_=sa.DATE(),
               existing_nullable=False)
        batch_op.drop_constraint('uq_user_indicator', type_='unique')
        batch_op.create_unique_constraint('uq_user_indicator', ['user_id', 'indicator_name', 'date'])
        batch_op.drop_column('params')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('indicator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('params', sqlite.JSON(), nullable=True))
        batch_op.drop_constraint('uq_user_indicator', type_='unique')
        batch_op.create_unique_constraint('uq_user_indicator', ['user_id', 'indicator_name'])
        batch_op.alter_column('date',
               existing_type=sa.DATE(),
               type_=sa.DATETIME(),
               existing_nullable=False)
        batch_op.drop_column('indicator_value')

    # ### end Alembic commands ###
