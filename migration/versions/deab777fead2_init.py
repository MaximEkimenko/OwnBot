"""init

Revision ID: deab777fead2
Revises: 
Create Date: 2024-12-18 17:02:53.593908

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'deab777fead2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usermodel',
    sa.Column('telegram_id', sa.BIGINT(), nullable=False),
    sa.Column('telegram_token', sa.String(), nullable=False),
    sa.Column('todoist_token', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('indicator',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('indicator_name', sa.String(), nullable=False),
    sa.Column('params', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usermodel.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('indicator_name')
    )
    op.create_table('report',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.Enum('FULL', 'INDICATOR', 'GRAPH', name='reporttype'), nullable=False),
    sa.Column('start', sa.TIMESTAMP(), nullable=False),
    sa.Column('end', sa.TIMESTAMP(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usermodel.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('scheduletask',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_type', sa.Enum('REGULAR', 'ONCE', 'DAILY', 'WEEKLY', name='tasktype'), nullable=False),
    sa.Column('schedule', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usermodel.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('todoisttask',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('todoist_task', sa.String(), nullable=False),
    sa.Column('project', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('done_time', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usermodel.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('todoist_task')
    )
    op.create_table('indicatorparams',
    sa.Column('indicator_name', sa.String(), nullable=False),
    sa.Column('calc_as_average', sa.Boolean(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('label_track_name', sa.String(), nullable=True),
    sa.Column('label_calc_name', sa.String(), nullable=True),
    sa.Column('track_by_name', sa.Boolean(), nullable=False),
    sa.Column('track_by_project', sa.Boolean(), nullable=False),
    sa.Column('indicator_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('indicator_name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('indicatorparams')
    op.drop_table('todoisttask')
    op.drop_table('scheduletask')
    op.drop_table('report')
    op.drop_table('indicator')
    op.drop_table('usermodel')
    # ### end Alembic commands ###
